
# -*- coding: utf-8 -*-
"""streamlit_dashboard

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dpNnHh83SjyYtUAfi8E8J6MLOS89xdTf
"""

# streamlit_dashboard.py

import streamlit as st
import pandas as pd

st.set_page_config(page_title="AI Mentor Hyper-Personalized Dashboard", layout="wide")

# --- Load all datasets ---
@st.cache_data
def load_data():
    students = pd.read_csv('students.csv')
    teachers = pd.read_csv('teachers.csv')
    sections = pd.read_csv('sections.csv')
    parents = pd.read_csv('parents.csv')
    activity = pd.read_csv('activity_logs.csv')
    skills = pd.read_csv('skills.csv')
    tasks = pd.read_csv('tasks.csv')
    assessments = pd.read_csv('assessments.csv')
    resources = pd.read_csv('resources.csv')
    milestones = pd.read_csv('milestones.csv')
    mentor_chats = pd.read_csv('mentor_chats.csv')
    interventions = pd.read_csv('interventions.csv')
    parent_teacher_msgs = pd.read_csv('parent_teacher_msgs.csv')
    notifications = pd.read_csv('notifications.csv')
    journals = pd.read_csv('journals.csv')
    return {
        'students': students,
        'teachers': teachers,
        'parents': parents,
        'sections': sections,
        'activity': activity,
        'skills': skills,
        'tasks': tasks,
        'assessments': assessments,
        'resources': resources,
        'milestones': milestones,
        'mentor_chats': mentor_chats,
        'interventions': interventions,
        'parent_teacher_msgs': parent_teacher_msgs,
        'notifications': notifications,
        'journals': journals
    }

data = load_data()

# --- App Title and Layout ---

st.title("Hyper-Personalized AI Mentor Portal")

# --- Sidebar: Role Selection ---
st.sidebar.header("Select Your Role")
role = st.sidebar.selectbox("Login as:", ["Student", "Teacher", "Parent", "Principal/HoD", "Admin"])

# --- Sidebar: User Selection ---
def user_selector(role, data):
    if role == "Student":
        user_id = st.sidebar.selectbox("Select Student:", data['students']['student_id'])
        return user_id
    elif role == "Teacher":
        user_id = st.sidebar.selectbox("Select Teacher:", data['teachers']['teacher_id'])
        return user_id
    elif role == "Parent":
        user_id = st.sidebar.selectbox("Select Parent:", data['parents']['parent_id'])
        return user_id
    elif role == "Principal/HoD":
        return None # For principal, show all data
    elif role == "Admin":
        return None # For admin, show all data
    else:
        return None

user_id = user_selector(role, data)

# --- Main Dashboard Content Routing ---
if role == "Student":
    from student_dashboard import show_student_dashboard
    show_student_dashboard(user_id, data)
elif role == "Teacher":
    from teacher_dashboard import show_teacher_dashboard
    show_teacher_dashboard(user_id, data)
elif role == "Parent":
    from parent_dashboard import show_parent_dashboard
    show_parent_dashboard(user_id, data)
elif role == "Principal/HoD":
    from principal_dashboard import show_principal_dashboard
    show_principal_dashboard(data)
elif role == "Admin":
    from admin_dashboard import show_admin_dashboard
    show_admin_dashboard(data)